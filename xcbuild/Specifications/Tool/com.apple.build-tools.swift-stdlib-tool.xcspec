/**
 Copyright (c) 2015-present, Facebook, Inc.
 All rights reserved.

 This source code is licensed under the BSD-style license found in the
 LICENSE file in the root directory of this source tree. An additional grant
 of patent rights can be found in the PATENTS file in the same directory.
 */

{
    Type = Tool;
    Identifier = com.apple.build-tools.swift-stdlib-tool;
    Name = "Swift stdlib tool";

    /* TODO: Need swift-stdlib-tool to construct valid command line. */
    CommandLine = "builtin-swiftStdLibTool [options]";
    RuleName = "CopySwiftLibs $(OutputPath)";

    DeeplyStatInputDirectories = YES;
    Outputs = (
        "$(OutputPath)",
    );

	Options = (
        {
            Name = "SWIFT_STDLIB_TOOL_ACTION";
            CommandLineArgs = ( "--copy" );
        },
        {
            Name = "SWIFT_STDLIB_TOOL_VERBOSITY";
            Type = Enumeration;
            Values = (
                none,
                verbose,
                extra-verbose,
            );
            DefaultValue = "verbose";
            CommandLineArgs = {
                none = ();
                verbose = (
                    "--verbose",
                );
                extra-verbose = (
                    "--verbose",
                    "--verbose",
                );
            };
        },
		{
            Name = "SWIFT_STDLIB_TOOL_EXECUTABLE_TO_SCAN";
            Type = Path;
            DefaultValue = "$(InputPath)";
            CommandLineFlag = "--scan-executable";
		},
		{
            Name = "SWIFT_STDLIB_TOOL_FOLDERS_TO_SCAN";
            Type = PathList;
            DefaultValue = "";
            CommandLineFlag = "--scan-folder";
		},
        {
            Name = "SWIFT_STDLIB_TOOL_SOURCE_LIBRARIES";
            Type = Path;
            DefaultValue = "$(SWIFT_LIBRARY_PATH)";
            CommandLineArgs = {
                "" = ( "--platform", "$(PLATFORM_NAME)" );
                "<<otherwise>>" = ( "--source-libraries", "$(value)" );
            };
        },
        {
            Name = "SWIFT_STDLIB_TOOL_TOOLCHAINS";
            Type = PathList;
            DefaultValue = "$(EFFECTIVE_TOOLCHAINS_DIRS)";
            CommandLineFlag = "--toolchain";
        },
        {
            Name = "SWIFT_STDLIB_TOOL_DESTINATION_DIR";
            Type = Path;
            DefaultValue = "$(TARGET_BUILD_DIR)/$(FRAMEWORKS_FOLDER_PATH)";
            CommandLineFlag = "--destination";
        },
        {
            Name = "SWIFT_STDLIB_TOOL_STRIP_BITCODE";
            Type = Boolean;
            DefaultValue = YES;
            CommandLineFlag = "--strip-bitcode";
            Condition = "$(ENABLE_BITCODE) == NO  ||  $(BITCODE_GENERATION_MODE) != bitcode";
        },
        {
            Name = "SWIFT_STDLIB_TOOL_RESOURCE_DESTINATION";
            Type = Path;
            DefaultValue = "$(TARGET_BUILD_DIR)/$(UNLOCALIZED_RESOURCES_FOLDER_PATH)";
            CommandLineFlag = "--resource-destination";
            Condition = "$(DEPLOYMENT_POSTPROCESSING) == NO";
        },
        {
            Name = "SWIFT_STDLIB_TOOL_RESOURCE_LIBRARY";
            Type = StringList;
            DefaultValue = "libswiftRemoteMirror.dylib";
            CommandLineFlag = "--resource-library";
            Condition = "$(DEPLOYMENT_POSTPROCESSING) == NO";
        },
        {
            Name = TOOLCHAINS;
            Type = StringList;
            SetValueInEnvironmentVariable = TOOLCHAINS;
        },
        {
            Name = SDKROOT;
            Type = Path;
            SetValueInEnvironmentVariable = SDKROOT;
        },
        {
            Name = DEVELOPER_DIR;
            Type = Path;
            SetValueInEnvironmentVariable = DEVELOPER_DIR;
        },
    );
}

